# Define variables
varDomain = "globomantics"
varNodeName = "master-node"
varHostEntries = ""
varVMMemory = {{ master_vm_memory }}
varVMCPU = {{ master_vm_cpu }}

#Build content for /etc/hosts file
$etchosts = <<SCRIPT
#!/bin/bash
cat > /etc/hosts <<EOF
127.0.0.1       localhost
#{varHostEntries}
EOF
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "{{ vm_image }}"



  ['{{ dc1 }}'].each do |dc|

    ip_prefix = dc == '{{ dc2 }}' ? '{{ cidr }}.1' : '{{ cidr }}.'

    (1..{{ master_vm_count }}).each do |i|
      config.vm.define "#{dc}-master-nodes#{i}" do |masternode|
        masternode.vm.hostname = "{{ owner }}-#{dc}-masternode#{i}"
        masternode.vm.network "private_network", ip: "#{ip_prefix}3#{i}"
        varHostEntries << "#{ip_prefix}4#{i}" "#{dc}-masternode#{i}.#{varDomain}" "#{dc}-masternode#{i}\n"
        masternode.vm.provision :shell, :inline => $etchosts
        masternode.vm.provider :virtualbox do |v|
          v.name = "{{ owner }}-#{dc}-#{varNodeName}#{i}".to_s
          v.gui = false
          v.customize ["modifyvm", :id, "--memory", "#{varVMMemory}".to_s]
          v.customize ["modifyvm", :id, "--cpus", "#{varVMCPU}".to_s]
         end
      end
    end
  end
end
